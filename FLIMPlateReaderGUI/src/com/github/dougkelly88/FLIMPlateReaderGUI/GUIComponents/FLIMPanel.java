/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.github.dougkelly88.FLIMPlateReaderGUI.GUIComponents;

import com.github.dougkelly88.FLIMPlateReaderGUI.Classes.sliderListener;
import com.google.common.eventbus.Subscribe;
import mmcorej.CMMCore;
import org.micromanager.MMStudio; 
import org.micromanager.api.events.PropertyChangedEvent; 

/**
 *
 * @author dk1109
 */
public class FLIMPanel extends javax.swing.JPanel {

    MMStudio gui_;
    CMMCore core_;
    PropertyChangedEvent event_;
    
    @Subscribe
    public PropertyChangedEvent onPropertyChanged(PropertyChangedEvent event)
//    public void onPropertyChanged(PropertiesChangedEvent event)
    {
        FLIMTestText.setText("google eventbus triggered in device " + event.getDevice() + "\n with property " + event.getProperty() + "\n changed to value " + event.getValue());
        event_ = event;
        return event;
    }
    
    /**
     * Creates new form FLIMPanel
     */
    public FLIMPanel() {
        initComponents();
        initBeanControls();
        gui_ = MMStudio.getInstance();
        try{
        gui_.registerForEvents(this);
        core_ = gui_.getCore();
        }
        catch (Exception e) 
        {
            gui_.showMessage("Error in FLIMPanel constructor: " + e.getMessage());
        }
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HRIControlsPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        MCPSlider = new com.github.dougkelly88.FLIMPlateReaderGUI.GUIComponents.SliderControl();
        FLIMToolsPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FLIMTestText = new javax.swing.JTextArea();
        getDichroic = new javax.swing.JButton();
        delayBoxTabbedPane = new javax.swing.JTabbedPane();
        fastDelayBoxPanel = new javax.swing.JPanel();
        fastBoxCalibratedCheck = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        fastCurrentDelay = new javax.swing.JTextField();
        scanDelCheck = new javax.swing.JCheckBox();
        slowDelayBoxPanel = new javax.swing.JPanel();
        slowBoxCalibrated = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        slowCurrentDelay = new javax.swing.JTextField();

        jLabel1.setText("HRI controls");

        MCPSlider.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                MCPSliderPropertyChange(evt);
            }
        });
        MCPSlider.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                MCPSliderVetoableChange(evt);
            }
        });

        javax.swing.GroupLayout HRIControlsPanelLayout = new javax.swing.GroupLayout(HRIControlsPanel);
        HRIControlsPanel.setLayout(HRIControlsPanelLayout);
        HRIControlsPanelLayout.setHorizontalGroup(
            HRIControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HRIControlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HRIControlsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(MCPSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
        );
        HRIControlsPanelLayout.setVerticalGroup(
            HRIControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HRIControlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(MCPSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        jLabel2.setText("FLIM tools");

        FLIMTestText.setColumns(20);
        FLIMTestText.setRows(5);
        jScrollPane1.setViewportView(FLIMTestText);

        getDichroic.setText("getDichroic");
        getDichroic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getDichroicActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FLIMToolsPanelLayout = new javax.swing.GroupLayout(FLIMToolsPanel);
        FLIMToolsPanel.setLayout(FLIMToolsPanelLayout);
        FLIMToolsPanelLayout.setHorizontalGroup(
            FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FLIMToolsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(getDichroic)
                .addGap(65, 65, 65)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(177, 177, 177))
        );
        FLIMToolsPanelLayout.setVerticalGroup(
            FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                        .addGap(93, 93, 93)
                        .addComponent(getDichroic)))
                .addContainerGap(92, Short.MAX_VALUE))
        );

        fastBoxCalibratedCheck.setText("Calibrated?");

        jLabel3.setText("Current delay (ps): ");

        fastCurrentDelay.setText("0");
        fastCurrentDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fastCurrentDelayActionPerformed(evt);
            }
        });

        scanDelCheck.setText("Enable fast delay switching?");
        scanDelCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanDelCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fastDelayBoxPanelLayout = new javax.swing.GroupLayout(fastDelayBoxPanel);
        fastDelayBoxPanel.setLayout(fastDelayBoxPanelLayout);
        fastDelayBoxPanelLayout.setHorizontalGroup(
            fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scanDelCheck)
                    .addComponent(fastBoxCalibratedCheck)
                    .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fastCurrentDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(426, Short.MAX_VALUE))
        );
        fastDelayBoxPanelLayout.setVerticalGroup(
            fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fastBoxCalibratedCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fastCurrentDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scanDelCheck)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        delayBoxTabbedPane.addTab("Fast delay box", fastDelayBoxPanel);

        slowBoxCalibrated.setText("Calibrated?");

        jLabel4.setText("Current delay (ps): ");

        slowCurrentDelay.setText("0");

        javax.swing.GroupLayout slowDelayBoxPanelLayout = new javax.swing.GroupLayout(slowDelayBoxPanel);
        slowDelayBoxPanel.setLayout(slowDelayBoxPanelLayout);
        slowDelayBoxPanelLayout.setHorizontalGroup(
            slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slowDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slowBoxCalibrated)
                    .addGroup(slowDelayBoxPanelLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(slowCurrentDelay, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(426, Short.MAX_VALUE))
        );
        slowDelayBoxPanelLayout.setVerticalGroup(
            slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slowDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slowBoxCalibrated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(slowCurrentDelay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(106, Short.MAX_VALUE))
        );

        delayBoxTabbedPane.addTab("Slow delay box", slowDelayBoxPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(delayBoxTabbedPane)
                    .addComponent(FLIMToolsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HRIControlsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delayBoxTabbedPane)
                .addGap(18, 18, 18)
                .addComponent(FLIMToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HRIControlsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void fastCurrentDelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fastCurrentDelayActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fastCurrentDelayActionPerformed

    private void getDichroicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDichroicActionPerformed
        FLIMTestText.setText(test("Dichroic", "Label"));
    }//GEN-LAST:event_getDichroicActionPerformed

    private void scanDelCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanDelCheckActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_scanDelCheckActionPerformed

    private void MCPSliderPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_MCPSliderPropertyChange
        
        FLIMTestText.setText("Slider value = " + MCPSlider.getValue());
    }//GEN-LAST:event_MCPSliderPropertyChange

    private void MCPSliderVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_MCPSliderVetoableChange
        // TODO add your handling code here:
    }//GEN-LAST:event_MCPSliderVetoableChange

    private String test(String dev, String prop)
    {
        String out;
        try{out = core_.getProperty(dev, prop);}
        catch (Exception e){out = "Error:" + e.getMessage();}
        return out;
    }
    
    private void initBeanControls(){
        
        MCPSlider.setLabel("MCP voltage (V)");
        MCPSlider.setMaxValue(850);
        MCPSlider.setMinValue(500);
//        MCPSlider.addPropertyChangeListener("value_", new sliderListener(core_));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea FLIMTestText;
    private javax.swing.JPanel FLIMToolsPanel;
    private javax.swing.JPanel HRIControlsPanel;
    private com.github.dougkelly88.FLIMPlateReaderGUI.GUIComponents.SliderControl MCPSlider;
    private javax.swing.JTabbedPane delayBoxTabbedPane;
    private javax.swing.JCheckBox fastBoxCalibratedCheck;
    private javax.swing.JTextField fastCurrentDelay;
    private javax.swing.JPanel fastDelayBoxPanel;
    private javax.swing.JButton getDichroic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBox scanDelCheck;
    private javax.swing.JCheckBox slowBoxCalibrated;
    private javax.swing.JTextField slowCurrentDelay;
    private javax.swing.JPanel slowDelayBoxPanel;
    // End of variables declaration//GEN-END:variables
}
