/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.github.dougkelly88.FLIMPlateReaderGUI.GUIComponents;

//import com.github.dougkelly88.FLIMPlateReaderGUI.Classes.sliderListener;
import com.github.dougkelly88.FLIMPlateReaderGUI.Classes.SequencedAcquisitionProperties;
import com.google.common.eventbus.Subscribe;
import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.FlowLayout;
import java.beans.PropertyChangeEvent;
import javax.swing.JButton;
import javax.swing.JLabel; 
import mmcorej.CMMCore; 
import org.micromanager.MMStudio; 
import org.micromanager.api.events.PropertyChangedEvent; 

/**
 *
 * @author dk1109
 */
public class FLIMPanel extends javax.swing.JPanel {

    MMStudio gui_;
    CMMCore core_;
    PropertyChangedEvent event_;
    SliderControl mcpSlider_;
    SliderControl gatewidthSlider_;
    private SequencedAcquisitionProperties sap_;
    
    @Subscribe
    public PropertyChangedEvent onPropertyChanged(PropertyChangedEvent event)
//    public void onPropertyChanged(PropertiesChangedEvent event)
    {
        FLIMTestText.setText("google eventbus triggered in device " + event.getDevice() + "\n with property " + event.getProperty() + "\n changed to value " + event.getValue());
        event_ = event;
        return event;
    }
    
    /**
     * Creates new form FLIMPanel
     */
    public FLIMPanel() {
        initComponents();
        initBeanControls();
        gui_ = MMStudio.getInstance();
        try{
        gui_.registerForEvents(this);
        core_ = gui_.getCore();
        }
        catch (Exception e) 
        {
            //gui_.showMessage("Error in FLIMPanel constructor: " + e.getMessage());
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        HRIControlsPanel = new javax.swing.JPanel();
        mcpVoltagePanel = new javax.swing.JPanel();
        gatewidthPanel = new javax.swing.JPanel();
        inhibitCheck = new javax.swing.JCheckBox();
        FLIMToolsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FLIMTestText = new javax.swing.JTextArea();
        getDichroic = new javax.swing.JButton();
        maxpointGraphPanel = new javax.swing.JPanel();
        gatesGraphPanel = new javax.swing.JPanel();
        autogateButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        maxpointButton = new javax.swing.JButton();
        maxpointResolutionField = new javax.swing.JTextField();
        delayBoxTabbedPane = new javax.swing.JTabbedPane();
        fastDelayBoxPanel = new javax.swing.JPanel();
        fastBoxCalibratedCheck = new javax.swing.JCheckBox();
        scanDelCheck = new javax.swing.JCheckBox();
        fastCurrentDelayPanel = new javax.swing.JPanel();
        slowDelayBoxPanel = new javax.swing.JPanel();
        slowBoxCalibrated = new javax.swing.JCheckBox();
        slowCurrentDelayPanel = new javax.swing.JPanel();

        HRIControlsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("HRI controls"));

        mcpVoltagePanel.setToolTipText("Sets the microchannel plate gain voltage on the Kentech HRI. ");

        javax.swing.GroupLayout mcpVoltagePanelLayout = new javax.swing.GroupLayout(mcpVoltagePanel);
        mcpVoltagePanel.setLayout(mcpVoltagePanelLayout);
        mcpVoltagePanelLayout.setHorizontalGroup(
            mcpVoltagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        mcpVoltagePanelLayout.setVerticalGroup(
            mcpVoltagePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );

        gatewidthPanel.setToolTipText("Sets the gate ON time on the Kentech HRI. ");

        javax.swing.GroupLayout gatewidthPanelLayout = new javax.swing.GroupLayout(gatewidthPanel);
        gatewidthPanel.setLayout(gatewidthPanelLayout);
        gatewidthPanelLayout.setHorizontalGroup(
            gatewidthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        gatewidthPanelLayout.setVerticalGroup(
            gatewidthPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );

        inhibitCheck.setSelected(true);
        inhibitCheck.setText("Inhibit?");
        inhibitCheck.setToolTipText("Inhibits the HRI; uncheck to use the HRI for FLIM imaging");
        inhibitCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inhibitCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HRIControlsPanelLayout = new javax.swing.GroupLayout(HRIControlsPanel);
        HRIControlsPanel.setLayout(HRIControlsPanelLayout);
        HRIControlsPanelLayout.setHorizontalGroup(
            HRIControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HRIControlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HRIControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(gatewidthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HRIControlsPanelLayout.createSequentialGroup()
                        .addComponent(inhibitCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mcpVoltagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        HRIControlsPanelLayout.setVerticalGroup(
            HRIControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HRIControlsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HRIControlsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inhibitCheck)
                    .addComponent(mcpVoltagePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gatewidthPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        FLIMToolsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("FLIM tools"));

        FLIMTestText.setColumns(20);
        FLIMTestText.setRows(5);
        jScrollPane1.setViewportView(FLIMTestText);

        getDichroic.setText("getDichroic");
        getDichroic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getDichroicActionPerformed(evt);
            }
        });

        maxpointGraphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout maxpointGraphPanelLayout = new javax.swing.GroupLayout(maxpointGraphPanel);
        maxpointGraphPanel.setLayout(maxpointGraphPanelLayout);
        maxpointGraphPanelLayout.setHorizontalGroup(
            maxpointGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        maxpointGraphPanelLayout.setVerticalGroup(
            maxpointGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        gatesGraphPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        javax.swing.GroupLayout gatesGraphPanelLayout = new javax.swing.GroupLayout(gatesGraphPanel);
        gatesGraphPanel.setLayout(gatesGraphPanelLayout);
        gatesGraphPanelLayout.setHorizontalGroup(
            gatesGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        gatesGraphPanelLayout.setVerticalGroup(
            gatesGraphPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 48, Short.MAX_VALUE)
        );

        autogateButton.setText("Autogating...");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setText("\"Find maxpoint\" resolution (ps)");

        maxpointButton.setText("Find maxpoint");
        maxpointButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxpointButtonActionPerformed(evt);
            }
        });

        maxpointResolutionField.setText("200");
        maxpointResolutionField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maxpointResolutionFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(maxpointResolutionField, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(maxpointButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(maxpointButton)
                    .addComponent(maxpointResolutionField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout FLIMToolsPanelLayout = new javax.swing.GroupLayout(FLIMToolsPanel);
        FLIMToolsPanel.setLayout(FLIMToolsPanelLayout);
        FLIMToolsPanelLayout.setHorizontalGroup(
            FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FLIMToolsPanelLayout.createSequentialGroup()
                        .addGroup(FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(getDichroic))
                            .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                                .addComponent(autogateButton)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FLIMToolsPanelLayout.createSequentialGroup()
                        .addGroup(FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gatesGraphPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(maxpointGraphPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        FLIMToolsPanelLayout.setVerticalGroup(
            FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FLIMToolsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(maxpointGraphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gatesGraphPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                        .addComponent(autogateButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(FLIMToolsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FLIMToolsPanelLayout.createSequentialGroup()
                                .addGap(0, 25, Short.MAX_VALUE)
                                .addComponent(getDichroic))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(21, 21, 21))
        );

        fastBoxCalibratedCheck.setText("Calibrated?");

        scanDelCheck.setText("Enable fast delay sequences?");
        scanDelCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanDelCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fastCurrentDelayPanelLayout = new javax.swing.GroupLayout(fastCurrentDelayPanel);
        fastCurrentDelayPanel.setLayout(fastCurrentDelayPanelLayout);
        fastCurrentDelayPanelLayout.setHorizontalGroup(
            fastCurrentDelayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        fastCurrentDelayPanelLayout.setVerticalGroup(
            fastCurrentDelayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout fastDelayBoxPanelLayout = new javax.swing.GroupLayout(fastDelayBoxPanel);
        fastDelayBoxPanel.setLayout(fastDelayBoxPanelLayout);
        fastDelayBoxPanelLayout.setHorizontalGroup(
            fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                        .addComponent(fastBoxCalibratedCheck)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                        .addGroup(fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fastCurrentDelayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(scanDelCheck))
                        .addGap(0, 341, Short.MAX_VALUE))))
        );
        fastDelayBoxPanelLayout.setVerticalGroup(
            fastDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fastDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(fastBoxCalibratedCheck)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fastCurrentDelayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scanDelCheck)
                .addContainerGap(10, Short.MAX_VALUE))
        );

        delayBoxTabbedPane.addTab("Fast delay box", fastDelayBoxPanel);

        slowBoxCalibrated.setText("Calibrated?");

        javax.swing.GroupLayout slowCurrentDelayPanelLayout = new javax.swing.GroupLayout(slowCurrentDelayPanel);
        slowCurrentDelayPanel.setLayout(slowCurrentDelayPanelLayout);
        slowCurrentDelayPanelLayout.setHorizontalGroup(
            slowCurrentDelayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 345, Short.MAX_VALUE)
        );
        slowCurrentDelayPanelLayout.setVerticalGroup(
            slowCurrentDelayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout slowDelayBoxPanelLayout = new javax.swing.GroupLayout(slowDelayBoxPanel);
        slowDelayBoxPanel.setLayout(slowDelayBoxPanelLayout);
        slowDelayBoxPanelLayout.setHorizontalGroup(
            slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slowDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slowBoxCalibrated)
                    .addComponent(slowCurrentDelayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(341, Short.MAX_VALUE))
        );
        slowDelayBoxPanelLayout.setVerticalGroup(
            slowDelayBoxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(slowDelayBoxPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(slowBoxCalibrated)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(slowCurrentDelayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        delayBoxTabbedPane.addTab("Slow delay box", slowDelayBoxPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(delayBoxTabbedPane)
                    .addComponent(FLIMToolsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HRIControlsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(delayBoxTabbedPane)
                .addGap(18, 18, 18)
                .addComponent(FLIMToolsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(HRIControlsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void getDichroicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getDichroicActionPerformed
        
        FLIMTestText.setText(test("Dichroic", "Label"));
        
    }//GEN-LAST:event_getDichroicActionPerformed

    private void scanDelCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanDelCheckActionPerformed
        sap_.setUseScanFLIM(scanDelCheck.isSelected());
    }//GEN-LAST:event_scanDelCheckActionPerformed

    private void inhibitCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inhibitCheckActionPerformed
        FLIMTestText.setText("Inhibit state = " + inhibitCheck.isSelected());
    }//GEN-LAST:event_inhibitCheckActionPerformed

    private void maxpointResolutionFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxpointResolutionFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxpointResolutionFieldActionPerformed

    private void maxpointButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxpointButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_maxpointButtonActionPerformed

    private String test(String dev, String prop)
    {
        String out;
        try{out = core_.getProperty(dev, prop);}
        catch (Exception e){out = "Error:" + e.getMessage();}
        return out;
    }
    
    private void initBeanControls(){
        
        mcpSlider_ = new SliderControl("MCP voltage (V)",300,850,750);
        mcpVoltagePanel.setLayout(new BorderLayout());
        mcpVoltagePanel.add(mcpSlider_, BorderLayout.SOUTH);
        mcpSlider_.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                mcpSliderPropertyChange(evt);
            }
        });
        
        gatewidthSlider_ = new SliderControl("Gate width (ps)", 200, 7000, 3000);
        gatewidthPanel.setLayout(new BorderLayout());
        gatewidthPanel.add(gatewidthSlider_, BorderLayout.SOUTH);
        gatewidthSlider_.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                gatewidthSliderPropertyChange(evt);
            }
        });
        
        HRIControlsPanel.revalidate();
        HRIControlsPanel.repaint();
        
    }
    
    private void mcpSliderPropertyChange(java.beans.PropertyChangeEvent evt) {

        FLIMTestText.setText("MCP slider value = " + mcpSlider_.getValue());
        
    }                                        
    
    private void gatewidthSliderPropertyChange(java.beans.PropertyChangeEvent evt) {

        FLIMTestText.setText("Gatewidth value = " + gatewidthSlider_.getValue());
        
    }                                        

    public void initSequencedAcquisitionProperties(SequencedAcquisitionProperties sap, final HCAFLIMPluginFrame frame){
        this.sap_=sap;
        sap_.addPropertyChangeListener(new java.beans.PropertyChangeListener() {

            @Override
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                
                FLIMTestText.setText("ScanFLIM set to " + ( (sap_.getUseScanFLIM()) ? "true":"false"));
                frame.sap_ = sap_;
            }
        });
//        sap_.addPropertyChangeListener();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea FLIMTestText;
    private javax.swing.JPanel FLIMToolsPanel;
    private javax.swing.JPanel HRIControlsPanel;
    private javax.swing.JButton autogateButton;
    private javax.swing.JTabbedPane delayBoxTabbedPane;
    private javax.swing.JCheckBox fastBoxCalibratedCheck;
    private javax.swing.JPanel fastCurrentDelayPanel;
    private javax.swing.JPanel fastDelayBoxPanel;
    private javax.swing.JPanel gatesGraphPanel;
    private javax.swing.JPanel gatewidthPanel;
    private javax.swing.JButton getDichroic;
    private javax.swing.JCheckBox inhibitCheck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton maxpointButton;
    private javax.swing.JPanel maxpointGraphPanel;
    private javax.swing.JTextField maxpointResolutionField;
    private javax.swing.JPanel mcpVoltagePanel;
    private javax.swing.JCheckBox scanDelCheck;
    private javax.swing.JCheckBox slowBoxCalibrated;
    private javax.swing.JPanel slowCurrentDelayPanel;
    private javax.swing.JPanel slowDelayBoxPanel;
    // End of variables declaration//GEN-END:variables
}
